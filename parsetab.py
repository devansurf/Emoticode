
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDEASSIGN DIVIDE ELSE END EQUALS FLOAT GREATERTHAN IF INT LESSTHAN LPAREN MINUS MULTIPLY NAME NOTEQUALS PLUS PRINT RPAREN THEN WHILE\n    emoti : code\n          | end\n    \n     code : expression\n          | var_assign\n          | conditional\n          | while\n          | print\n          | empty\n    \n    var_assign : NAME ASSIGN expression\n    \n    expression : expression PLUS expression\n               | expression DIVIDE expression\n               | expression MULTIPLY expression\n               | expression MINUS expression\n               | expression LESSTHAN expression\n               | expression GREATERTHAN expression\n               | expression EQUALS expression\n               | expression NOTEQUALS expression\n    \n    conditional : IF expression THEN\n    \n    while : WHILE expression THEN\n    \n    end : END\n    \n    expression : NAME\n    \n    expression : INT\n               | FLOAT\n    \n    expression : LPAREN expression RPAREN\n    \n    print : PRINT LPAREN expression RPAREN\n    \n    empty :\n    '
    
_lr_action_items = {'END':([0,],[10,]),'NAME':([0,14,15,16,18,19,20,21,22,23,24,25,26,31,],[11,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'INT':([0,14,15,16,18,19,20,21,22,23,24,25,26,31,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'FLOAT':([0,14,15,16,18,19,20,21,22,23,24,25,26,31,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'LPAREN':([0,14,15,16,17,18,19,20,21,22,23,24,25,26,31,],[14,14,14,14,31,14,14,14,14,14,14,14,14,14,14,]),'IF':([0,],[15,]),'WHILE':([0,],[16,]),'PRINT':([0,],[17,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,28,32,33,34,35,36,37,38,39,40,41,42,43,45,],[-26,0,-1,-2,-3,-4,-5,-6,-7,-8,-20,-21,-22,-23,-21,-10,-11,-12,-13,-14,-15,-16,-17,-9,-24,-18,-19,-25,]),'PLUS':([4,11,12,13,27,28,29,30,32,33,34,35,36,37,38,39,40,41,44,],[18,-21,-22,-23,18,-21,18,18,-10,-11,-12,-13,18,18,18,18,18,-24,18,]),'DIVIDE':([4,11,12,13,27,28,29,30,32,33,34,35,36,37,38,39,40,41,44,],[19,-21,-22,-23,19,-21,19,19,19,-11,-12,19,19,19,19,19,19,-24,19,]),'MULTIPLY':([4,11,12,13,27,28,29,30,32,33,34,35,36,37,38,39,40,41,44,],[20,-21,-22,-23,20,-21,20,20,20,-11,-12,20,20,20,20,20,20,-24,20,]),'MINUS':([4,11,12,13,27,28,29,30,32,33,34,35,36,37,38,39,40,41,44,],[21,-21,-22,-23,21,-21,21,21,-10,-11,-12,-13,21,21,21,21,21,-24,21,]),'LESSTHAN':([4,11,12,13,27,28,29,30,32,33,34,35,36,37,38,39,40,41,44,],[22,-21,-22,-23,22,-21,22,22,-10,-11,-12,-13,22,22,22,22,22,-24,22,]),'GREATERTHAN':([4,11,12,13,27,28,29,30,32,33,34,35,36,37,38,39,40,41,44,],[23,-21,-22,-23,23,-21,23,23,-10,-11,-12,-13,23,23,23,23,23,-24,23,]),'EQUALS':([4,11,12,13,27,28,29,30,32,33,34,35,36,37,38,39,40,41,44,],[24,-21,-22,-23,24,-21,24,24,-10,-11,-12,-13,24,24,24,24,24,-24,24,]),'NOTEQUALS':([4,11,12,13,27,28,29,30,32,33,34,35,36,37,38,39,40,41,44,],[25,-21,-22,-23,25,-21,25,25,-10,-11,-12,-13,25,25,25,25,25,-24,25,]),'ASSIGN':([11,],[26,]),'RPAREN':([12,13,27,28,32,33,34,35,36,37,38,39,41,44,],[-22,-23,41,-21,-10,-11,-12,-13,-14,-15,-16,-17,-24,45,]),'THEN':([12,13,28,29,30,32,33,34,35,36,37,38,39,41,],[-22,-23,-21,42,43,-10,-11,-12,-13,-14,-15,-16,-17,-24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'emoti':([0,],[1,]),'code':([0,],[2,]),'end':([0,],[3,]),'expression':([0,14,15,16,18,19,20,21,22,23,24,25,26,31,],[4,27,29,30,32,33,34,35,36,37,38,39,40,44,]),'var_assign':([0,],[5,]),'conditional':([0,],[6,]),'while':([0,],[7,]),'print':([0,],[8,]),'empty':([0,],[9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> emoti","S'",1,None,None,None),
  ('emoti -> code','emoti',1,'p_emoticode','emoticode.py',124),
  ('emoti -> end','emoti',1,'p_emoticode','emoticode.py',125),
  ('code -> expression','code',1,'p_code','emoticode.py',132),
  ('code -> var_assign','code',1,'p_code','emoticode.py',133),
  ('code -> conditional','code',1,'p_code','emoticode.py',134),
  ('code -> while','code',1,'p_code','emoticode.py',135),
  ('code -> print','code',1,'p_code','emoticode.py',136),
  ('code -> empty','code',1,'p_code','emoticode.py',137),
  ('var_assign -> NAME ASSIGN expression','var_assign',3,'p_var_assign','emoticode.py',151),
  ('expression -> expression PLUS expression','expression',3,'p_expression','emoticode.py',157),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','emoticode.py',158),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','emoticode.py',159),
  ('expression -> expression MINUS expression','expression',3,'p_expression','emoticode.py',160),
  ('expression -> expression LESSTHAN expression','expression',3,'p_expression','emoticode.py',161),
  ('expression -> expression GREATERTHAN expression','expression',3,'p_expression','emoticode.py',162),
  ('expression -> expression EQUALS expression','expression',3,'p_expression','emoticode.py',163),
  ('expression -> expression NOTEQUALS expression','expression',3,'p_expression','emoticode.py',164),
  ('conditional -> IF expression THEN','conditional',3,'p_conditional','emoticode.py',177),
  ('while -> WHILE expression THEN','while',3,'p_while','emoticode.py',188),
  ('end -> END','end',1,'p_end','emoticode.py',206),
  ('expression -> NAME','expression',1,'p_expression_var','emoticode.py',221),
  ('expression -> INT','expression',1,'p_expression_int_float','emoticode.py',228),
  ('expression -> FLOAT','expression',1,'p_expression_int_float','emoticode.py',229),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_parenthesis','emoticode.py',236),
  ('print -> PRINT LPAREN expression RPAREN','print',4,'p_print','emoticode.py',243),
  ('empty -> <empty>','empty',0,'p_empty','emoticode.py',253),
]
